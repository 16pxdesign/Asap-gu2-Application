@using Application.Data.Models
@using Application.ViewModels
@model List<HealthIssueViewModel>
@(ViewData["PropertyName"]) 
<div class="col-md mt-4">
		    <div class="card bg-transparent">
		        <div class="card-body">
			        <div>
				        <input id="btnAddItem" type="button"

				               onclick="addRow@(ViewData["PropertyName"])();" value="Add Item"/>
			        </div>
			        
			 
			        <table class="table">
				        <thead>
				        <tr>
					        <th scope="col">
						        Title
					        </th>
					        <th scope="col">
						     
					        </th>
				        </tr>
				        </thead>
				        <tbody id="table@(ViewData["PropertyName"])">
        
				        @for (var i = 0; i < Model.Count; i++)
				        {
					        
					        <tr id="trItem@(ViewData["PropertyName"])@(i)">
						        <th style='display:none'><input id='@(ViewData["PropertyName"]).Index' name='@(ViewData["PropertyName"]).Index' type='hidden' value='@(i)' /></th>
						        <th scope="row"><input id='@(ViewData["PropertyName"])[@(i)].Flat' name='@(ViewData["PropertyName"])[@(i)].Flat' type='text' value='@Model[i].Date' /></th>
						        <th><input id='@(ViewData["PropertyName"])[@(i)].Street'  name='@(ViewData["PropertyName"])[@(i)].Street' type='text' value='@Model[i].Name' /></th>
						        <th><input  type="hidden" id='@(ViewData["PropertyName"])[@(i)].Description' name='@(ViewData["PropertyName"])[@(i)].Description'  value='@Model[i].Description' /></th>
						        <th><a href="#" class="btn btn-link text-danger" id='btnAddItem' onclick='removeRow@(ViewData["PropertyName"])(@(i));' ><i class="fas fa-trash-alt"></i></a></th>
					        </tr>
				        }
      
				        </tbody>
			        </table>
			        
			        <script language="javascript" type="text/javascript">
	                    function addRow@(ViewData["PropertyName"])() {

		                    var index = $("#table@(ViewData["PropertyName"])").children("tr").length;

		                    var indexCell = "<th style='display:none'><input id='@(ViewData["PropertyName"]).Index' name='@(ViewData["PropertyName"]).Index' type='hidden' value='" + index + "' /></th>";
		                    var value1 = "<th scope='row'><input id='@(ViewData["PropertyName"]).[" + index + "].Date' name='@(ViewData["PropertyName"]).[" + index + "].Date' type='text' value='' /></th>";
		                    var value2 = "<th><input id='@(ViewData["PropertyName"]).[" + index + "].Name' name='@(ViewData["PropertyName"]).[" + index + "].Name' type='text' value='' /></th>";
		                    var value3 = "<th><input  type='hidden' id='@(ViewData["PropertyName"]).[" + index + "].Name' name='@(ViewData["PropertyName"]).[" + index + "].Name' type='text' value='' /></th>";
		                    var removeCell = "<th><a href='#' class='btn btn-link text-danger' id='btnAddItem' onclick='removeRow@(ViewData["PropertyName"])(" + index + ");' ><i class='fas fa-trash-alt'></i></a></th>";

		                    var newRow = "<tr id='trItem@(ViewData["PropertyName"])" + index + "'>" + indexCell + value1 + value2 + value3 + removeCell + "</tr>";
		                    $("#table@(ViewData["PropertyName"])").append(newRow);
	                    }

	                    function removeRow@(ViewData["PropertyName"])(id) {
		                    var controlToBeRemoved = "#trItem@(ViewData["PropertyName"])" + id;
		                    $(controlToBeRemoved).remove();
	                    }
                    </script>

			     
			       
		        </div>
		    </div>
		</div>


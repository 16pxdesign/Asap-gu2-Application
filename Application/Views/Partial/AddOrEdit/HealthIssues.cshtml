@using Application.Data.Models
@using Application.ViewModels
@model List<HealthIssueViewModel>
@{
	ViewBag.Source = "Player.HealthIssues";
	ViewBag.FormName = "HealthIssues";
		
}
@(ViewBag.FormName) 
<div class="col-md mt-4">
		    <div class="card bg-transparent">
		        <div class="card-body">
			        <div>
				        <input id="btnAddItem" type="button"

				               onclick="addRow@(ViewBag.FormName)();" value="Add Item"/>
			        </div>
			        
			           
			        
			        <table>
				        <thead>
				        <tr>
					        <td>
						        Title
					        </td>
					        <td>
						        Published Date
					        </td>
				        </tr>
				        </thead>
				        <tbody id="table@(ViewBag.FormName)">
						
				        
				        @for (var i = 0; i < Model.Count; i++)
				        {
					        
					        <tr id="trItem@(ViewBag.FormName)@(i)">
						        <td style='display:none'><input id='@(ViewBag.Source).Index' name='@(ViewBag.Source).Index' type='hidden' value='@(i)' /></td>
						        <td><input id='@(ViewBag.Source)[@(i)].Date' name='@(ViewBag.Source)[@(i)].Date' type='text' value='@Model[i].Date' /></td>
						        <td><input id='@(ViewBag.Source)[@(i)].Name'  name='@(ViewBag.Source)[@(i)].Name' type='text' value='@Model[i].Name' /></td>
						        <td><input  type="hidden" id='@(ViewBag.Source)[@(i)].Description' name='@(ViewBag.Source)[@(i)].Description' type='text' value='@Model[i].Description' /></td>
						        <td><a href="#" class="btn btn-link text-danger" id='btnAddItem' onclick='removeRow@(ViewBag.FormName)(@(i));' ><i class="fas fa-trash-alt"></i></a></td>
					        </tr>
				        }
      
				      
        
				        </tbody>
			        </table>
			        
			        <script language="javascript" type="text/javascript">
	                    function addRow@(ViewBag.FormName)() {

		                    @{
			                    //TODO:
			                    //For validation? Check it
			                    Model.Add(new HealthIssueViewModel());
		                    }

		                    var index = $("#table@(ViewBag.FormName)").children("tr").length;

		                    var indexCell = "<td style='display:none'><input id='@(ViewBag.Source).Index' name='@(ViewBag.Source).Index' type='hidden' value='" + index + "' /></td>";
		                    var value1 = "<td><input id='@(ViewBag.Source)[" + index + "].Date' name='@(ViewBag.Source)[" + index + "].Date' type='text' value='' /></td>";
		                    var value2 = "<td><input id='@(ViewBag.Source)[" + index + "].Name' name='@(ViewBag.Source)[" + index + "].Name' type='text' value='' /></td>";
		                    var value3 = "<td><input  type='hidden' id='@(ViewBag.Source)[" + index + "].Description' name='@(ViewBag.Source)[" + index + "].Description' type='text' value='' /></td>";
		                    var removeCell = "<td><a href='#' class='btn btn-link text-danger' id='btnAddItem' onclick='removeRow@(ViewBag.FormName)(" + index + ");' ><i class='fas fa-trash-alt'></i></a></td>";

		                    var newRow = "<tr id='trItem@(ViewBag.FormName)" + index + "'>" + indexCell + value1 + value2 + value3 + removeCell + "</tr>";
		                    console.log(newRow);
		                    $("#table@(ViewBag.FormName)").append(newRow);
	                    }

	                    function removeRow@(ViewBag.FormName)(id) {
		                    var controlToBeRemoved = "#trItem@(ViewBag.FormName)" + id;
		                    $(controlToBeRemoved).remove();
	                    }
                    </script>

			      
			        
			       
		        </div>
		    </div>
		</div>

